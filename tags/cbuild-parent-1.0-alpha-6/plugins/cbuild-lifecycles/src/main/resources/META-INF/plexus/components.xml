<?xml version='1.0' encoding='UTF-8'?>
<component-set>
  <components>
    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>rpm-light</role-hint>
      <implementation>
        org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping
      </implementation>
      <configuration>
        <lifecycles>
          <lifecycle>
            <id>clean</id>
            <phases>
              <clean>
                org.apache.maven.plugins:maven-clean-plugin:clean
              </clean>
              <post-clean>
                org.codehaus.mojo:rpm-cbuild-maven-plugin:remove
              </post-clean>
            </phases>
          </lifecycle>
          <lifecycle>
            <id>default</id>
            <phases>
              <initialize>
                org.codehaus.mojo:build-on-demand-maven-plugin:resolve,
                org.codehaus.mojo:patch-maven-plugin:resolve-patches,
                org.codehaus.mojo:project-sources-maven-plugin:resolve-project-sources,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:set-project-file,
                org.codehaus.mojo:multibuild-optimizer-maven-plugin:check-package-staleness
              </initialize>
              <process-sources>
                org.codehaus.mojo:patch-maven-plugin:apply-directory
              </process-sources>
              <package>
                org.codehaus.mojo:rpm-cbuild-maven-plugin:generate-spec,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:build,
                org.codehaus.mojo:patch-maven-plugin:package-patches,
                org.codehaus.mojo:project-sources-maven-plugin:package-project-sources
              </package>
              <install>
                org.apache.maven.plugins:maven-install-plugin:install,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:install,
                org.codehaus.mojo:patch-maven-plugin:purge-local-patch-artifact
              </install>
              <deploy>
                org.apache.maven.plugins:maven-deploy-plugin:deploy,
                org.codehaus.mojo:project-sources-maven-plugin:deploy-project-sources
              </deploy>
            </phases>
          </lifecycle>
        </lifecycles>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>rpm</role-hint>
      <implementation>
        org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping
      </implementation>
      <configuration>
        <lifecycles>
          <lifecycle>
            <id>clean</id>
            <phases>
              <clean>org.apache.maven.plugins:maven-clean-plugin:clean</clean>
              <post-clean>org.codehaus.mojo:rpm-cbuild-maven-plugin:remove</post-clean>
            </phases>
          </lifecycle>
          <lifecycle>
            <id>default</id>
            <phases>
              <validate>org.codehaus.mojo:make-maven-plugin:validate-pom</validate>
              <initialize>
                org.codehaus.mojo:build-on-demand-maven-plugin:resolve,
                org.codehaus.mojo:patch-maven-plugin:resolve-patches,
                org.codehaus.mojo:project-sources-maven-plugin:resolve-project-sources,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:set-project-file,
                org.codehaus.mojo:multibuild-optimizer-maven-plugin:check-package-staleness
              </initialize>

              <process-sources>org.codehaus.mojo:patch-maven-plugin:apply-directory</process-sources>
              <generate-resources>org.codehaus.mojo:make-maven-plugin:configure</generate-resources>
              <compile>org.codehaus.mojo:make-maven-plugin:compile</compile>
              <test>org.codehaus.mojo:make-maven-plugin:test</test>

              <!-- TODO: Maven 3.0 move this to prepare-package 
              <prepare-package>org.codehaus.mojo:make-maven-plugin:make-install</prepare-package-->

              <package>
                org.codehaus.mojo:make-maven-plugin:make-install,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:generate-spec,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:build,
                org.codehaus.mojo:patch-maven-plugin:package-patches,
                org.codehaus.mojo:project-sources-maven-plugin:package-project-sources
              </package>
              <install>
                org.apache.maven.plugins:maven-install-plugin:install,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:install,
                org.codehaus.mojo:patch-maven-plugin:purge-local-patch-artifact
              </install>
              <deploy>
                org.apache.maven.plugins:maven-deploy-plugin:deploy,
                org.codehaus.mojo:project-sources-maven-plugin:deploy-project-sources
              </deploy>
            </phases>
          </lifecycle>
        </lifecycles>
      </configuration>
    </component>

    <!-- Bind mojos to the correct lifecycle phases for the 'jrpm' packaging.
      |    
      |   This lifecycle mapping uses four plugins:
      | 
      |   1. This plugin (maven-make-plugin) - Execute the meat of the build.
      |   2. maven-source-get-plugin - Retrieve project sources from some external URL.
      |   3. maven-patch-plugin - Retrieve and apply patches to project sources.
      |   4. maven-rpm-plugin - Bundle the result of 'make install' (or similar) as an RPM.
      |-->
    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>jrpm</role-hint>
      <implementation>
        org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping
      </implementation>
      <configuration>
        <lifecycles>
          <lifecycle>
            <id>clean</id>
            <phases>
              <clean>
                org.apache.maven.plugins:maven-clean-plugin:clean
              </clean>
              <post-clean>
                org.codehaus.mojo:rpm-cbuild-maven-plugin:remove
              </post-clean>
            </phases>
          </lifecycle>
          <lifecycle>
            <id>default</id>
            <phases>
              <initialize>
                org.codehaus.mojo:rpm-cbuild-maven-plugin:set-project-file,
                org.codehaus.mojo:patch-maven-plugin:resolve-patches,
                org.codehaus.mojo:project-sources-maven-plugin:resolve-project-sources,
                org.codehaus.mojo:multibuild-optimizer-maven-plugin:check-package-staleness
              </initialize>

              <process-sources>
                org.codehaus.mojo:patch-maven-plugin:apply-directory
              </process-sources>

              <package>
                org.codehaus.mojo:rpm-cbuild-maven-plugin:generate-spec,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:build,
                org.codehaus.mojo:patch-maven-plugin:package-patches,
                org.codehaus.mojo:project-sources-maven-plugin:package-project-sources
              </package>

              <install>
                org.apache.maven.plugins:maven-install-plugin:install,
                org.codehaus.mojo:rpm-cbuild-maven-plugin:install,
                org.codehaus.mojo:patch-maven-plugin:purge-local-patch-artifact
              </install>

              <deploy>
                org.apache.maven.plugins:maven-deploy-plugin:deploy,
                org.codehaus.mojo:project-sources-maven-plugin:deploy-project-sources
              </deploy>
            </phases>
          </lifecycle>
        </lifecycles>
      </configuration>
    </component>
    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>jrpm</role-hint>
      <implementation>
        org.apache.maven.artifact.handler.DefaultArtifactHandler
      </implementation>
      <configuration>
        <extension>rpm</extension>
        <packaging>jrpm</packaging>
        <type>rpm</type>
        <!-- someday...
          <includesDependencies>true</includesDependencies>
        -->
        <language>java</language>
        <addedToClasspath>false</addedToClasspath>
      </configuration>
    </component>
  </components>
</component-set>
