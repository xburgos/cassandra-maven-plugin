    ------
    Maven 2 Netbeans Freeform plugin 
    ------
    Raphaël Piéroni
    ------
    Mon Aug 15 2005
    ------

The Todo List

    This page descibe the Todo list for the different versions of the plugin.

* Version 2.0

    * the configuration of the plugin to add goals to the context menu
      and ant script, to add additionnal files or folders to view window.
      <<done>>.

    * add some unit test.

        * pom without any dependency (project 1) <<done>>

        * pom with some dependency (project 2) <<done>>
        
        * execution with additional actions/targets (project 3) <<done>>

        * execution with additional folders/files (project 4) <<done>>

        []
     
    * Bug 1 : Create a property file refered as netbeans.properties which 
      declares the local.repository which is equal to the local repository. 

      Also create the directory path using that property in their path in the
      compilation units. 

      Also create the paths to directories of the project relatively to the pom 
      directory. <<done>>

    * move the test plugin configuration to settings or to unit test. <<done>>

    * add description in the mavencall.xml file for the Netbeans actions (Build,
      Clean, Rebuild, Javadoc, Run and Test). <<done>>

    * rename the plugin with the new codehaus way <name>-maven-plugin. <<done>>

    * add new packaging recognition : maven-plugin. <<done>>

    * add the target directory in default view items. <<done>>

    * add the src/site directory in the default view items. <<done>>

    * remove the GenerateMavencallMojo and GenerateProjectMojo as they are not 
      usefull. <<done>>

    * add a new property in project.properties file : project.directory. also 
      add the definition and use in mavencall.xml and use in project.xml.
      The plugin parameter added is outputDirectory : The directory where to 
      write the nbproject directory and Netbeans project files. Defaults to the 
      directory where the pom.xml file reside, if this parameter is left empty.
      <<done>>

    * add some unit test.

        * execution with outputDirectory parameter (project 5) <<done>>

        * pom with maven-plugin packaging (project 6) <<done>>

        * pom with parent which have dependency (project 7) <<done>>

        * pom with parent which have a test dependency (project 8) <<done>>

        * pom with parent which both have dependency (project 9) <<done>>

        * pom with parent which both have test dependency (project 10) <<done>>

        []

    * javadoc the changed code. <<done>>

    * add meaningfull logs for the use of the output directory. <<done>>

    * add doco about the outputDirectory parameter. <<done>>

    * fix MOJO-57. <<done>>

    * fix MOJO-58. <<done>>

    []

* Version 2.1

    * create a changes.xml. -- waiting for a change report to be released.

    * the discovery of other plugin resources : 
      first modello files

    * the discovery of other plugin resources : 
      java implementaion level (1.3 1.4 1.5)

    * additional configuration :
      move the guess of the os to a specific mojo parameter which defaults to a 
      system property.

    * add some unit test.

        * pom with generated sources

        * pom with modules

        * pom with modules with intra reference

        * pom with different java level

        * pom with modello files

        []

    * rename the goal's name of the GenerateNetbeansProjectMojo from 
      generate-X to netbeans (and maybe rename the netbeans-freeform to netbeans)
      (or to freeform:freeform)

    * rename version : 0.2 become 1.0.0-alpha-2 / future versions to 0.i to
      1.0.0-alpha-i

    []

* Version 2.2

    * the add of some new packaging recognition as only jar is currently
      defined (all packaging are treated as jar).

    []

* Unversionned wishlist

    * add some configuration option.

        * alternative build, clean, site, ... targets

        * whether to write src/site and target before additionnal files and folders

        []

    * add the use of the plugin:xdoc reporting as soon as possible. 
      => which means have a site with full examples (image snapshots - wink ?)

    * set the reports in the pom (javadoc, project informations)

    []
