package org.apache.maven.plugin.deb;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import org.apache.maven.artifact.Artifact;
import org.apache.maven.plugin.AbstractMojo;

/**
 * @author <a href="mailto:trygvis@inamo.no">Trygve Laugst&oslash;l</a>
 * @version $Id$
 */
public abstract class AbstractDebMojo
    extends AbstractMojo
{
    /**
     * @parameter expression="${project.artifacts}"
     * @required
     * @readonly
     */
    private Set artifacts;

    /**
     * @parameter expression="${project.groupId}"
     * @required
     * @readonly
     */
    private String groupId;

    /**
     * @parameter expression="${project.artifactId}"
     * @required
     * @readonly
     */
    private String artifactId;

    /**
     * @parameter default-value="${project.version}"
     * @required
     */
    private String version;

    /**
     * @parameter expression="${project.description}"
     * @required
     */
    private String description;

    /**
     * @parameter default-value="all"
     * @required
     */
    private String architecture;

    /**
     * @parameter
     * @required
     */
    private String maintainer;

    /**
     * @parameter
     */
    private String packageName;

    /**
     * @parameter default-value="standard"
     * @required
     */
    private String priority;

    /**
     * @parameter
     * @required
     */
    private String section;

    /**
     * @parameter
     * @optional
     */
    private String maintainerRevision;

    /**
     * A flag to indicate whether to generate the Depends: section in the control file.
     *
     * @parameter default-value="true"
     * @optional
     */
    private boolean autoGenerateDepends;

    /**
     * @parameter
     * @optional
     */
    private String debFileName;

    /**
     * @parameter
     */
    private Set extraDependencies;

    /**
     * @component
     */
    private ControlFileGenerator controlFileGenerator;

    /**
     * A flag to indicate whether to use fakeroot.
     *
     * @parameter default-value="true"
     * @optional
     */
    protected boolean useFakeroot;

    // ----------------------------------------------------------------------
    // Accessors
    // ----------------------------------------------------------------------

    public String getGroupId()
    {
        return groupId;
    }

    public String getArtifactId()
    {
        return artifactId;
    }

    public String getVersion()
    {
        return version;
    }

    private boolean controlFileGeneratorInitialized;

    protected ControlFileGenerator getControlFileGenerator()
    {
        Set dependencies = new HashSet();

        if ( autoGenerateDepends )
        {
            for ( Iterator it = artifacts.iterator(); it.hasNext(); )
            {
                Artifact artifact = (Artifact) it.next();

                dependencies.add( new DebianDependency( artifact ) );
            }
        }

        if ( extraDependencies != null )
        {
            dependencies.addAll( extraDependencies );
        }

        if ( !controlFileGeneratorInitialized )
        {
            controlFileGenerator.setDependencies( dependencies );
            controlFileGenerator.setGroupId( groupId );
            controlFileGenerator.setArtifactId( artifactId );
            controlFileGenerator.setVersion( version );
            controlFileGenerator.setArchitecture( architecture );
            controlFileGenerator.setDescription( description );
            controlFileGenerator.setMaintainer( maintainer );
            controlFileGenerator.setPackageName( packageName );
            controlFileGenerator.setPriority( priority );
            controlFileGenerator.setSection( section );
            controlFileGenerator.setMaintainerRevision( maintainerRevision );
            controlFileGenerator.setDebFileName( debFileName );

            controlFileGeneratorInitialized = true;
        }

        return controlFileGenerator;
    }
}
