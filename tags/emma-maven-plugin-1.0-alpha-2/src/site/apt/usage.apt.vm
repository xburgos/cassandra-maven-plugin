 ~~ The MIT License
 ~~
 ~~ Copyright (c) 2007-8, The Codehaus
 ~~
 ~~ Permission is hereby granted, free of charge, to any person obtaining a copy of
 ~~ this software and associated documentation files (the "Software"), to deal in
 ~~ the Software without restriction, including without limitation the rights to
 ~~ use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 ~~ of the Software, and to permit persons to whom the Software is furnished to do
 ~~ so, subject to the following conditions:
 ~~
 ~~ The above copyright notice and this permission notice shall be included in all
 ~~ copies or substantial portions of the Software.
 ~~
 ~~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ~~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ~~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ~~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ~~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 ~~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 ~~ SOFTWARE.

 ------
 Maven EMMA plugin
 ------
 Anna Nieslony, Roger Butenuth
 ------
 March 2006

Usage

* Configuration in the build section

  The EMMA plugin has to be activated in the build section, the "instrument" goal
  must be executed.
  
  It is important to execute the tests in a seperate jvm because EMMA dumps
  the coverage on termination of the JVM. The tests need a different 
  classes directory to load the instrumented classes. (The classes are not
  instrumented in place because we don't want intrumented classes in the
  released jars.)

+------------------------------------------------+
  <build>
    <plugins>     
      <plugin>      
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>emma-maven-plugin</artifactId>
        <version>${project.version}</version>
        <inherited>true</inherited>          
        <executions>
          <execution>
            <phase>process-classes</phase>               
            <goals>
              <goal>instrument</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <forkMode>once</forkMode>
          <reportFormat>xml</reportFormat>
          <classesDirectory>\${project.build.directory}/generated-classes/emma/classes</classesDirectory>    
        </configuration>        
      </plugin>
    </plugins>
  </build>
+------------------------------------------------+

* Configuration in the reporting section

  There is not much to configure for the reports: Just activate them.

+------------------------------------------------+
  <reporting>    
    <plugins>  
      <plugin>      
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>emma-maven-plugin</artifactId>
        <version>${project.version}</version>
        <inherited>true</inherited>          
      </plugin>
      <plugin> 
        <groupId>org.codehaus.mojo</groupId> 
        <artifactId>surefire-report-maven-plugin</artifactId> 
        <inherited>true</inherited>
      </plugin>       
    </plugins>      
  </reporting>  
+------------------------------------------------+
