<document>
  <properties>
    <title>was5-plugin - Overview</title>
    </properties>
  <body>
    <section name="was5-plugin">
      <p>Goals available: </p>
      <table>
        <tr>
          <th>Goal</th>
          <th>Description</th>
          </tr>
        <tr>
          <td>
            <a href="ListApplications-mojo.html">
              <code>was5:ListApplications</code>
              </a>
            </td>
          <td>This goal lists all the applications installed on a
				WebSphere Server or Cell.</td>
          </tr>
        <tr>
          <td>
            <a href="StartApplication-mojo.html">
              <code>was5:StartApplication</code>
              </a>
            </td>
          <td>This task enables you to start an existing or newly
				installed application on a WebSphere Server or in a
				WebSphere Cell.</td>
          </tr>
        <tr>
          <td>
            <a href="EJBDeploy-mojo.html">
              <code>was5:EJBDeploy</code>
              </a>
            </td>
          <td>This goal generates WebSphere specific deploymentcode
				for an ejb jarfile.</td>
          </tr>
        <tr>
          <td>
            <a href="WSDL2Java-mojo.html">
              <code>was5:WSDL2Java</code>
              </a>
            </td>
          <td>The WSDL2Java task creates Java classes and deployment
				descriptor templates from a Web Services Description
				Language (WSDL) file.</td>
          </tr>
        <tr>
          <td>
            <a href="UninstallApplication-mojo.html">
              <code>was5:UninstallApplication</code>
              </a>
            </td>
          <td>Uinstalls an application from WebSphere.</td>
          </tr>
        <tr>
          <td>
            <a href="StopApplication-mojo.html">
              <code>was5:StopApplication</code>
              </a>
            </td>
          <td>This task enables you to stop an existing application on
				a WebSphere Server or in a WebSphere Cell.</td>
          </tr>
        <tr>
          <td>
            <a href="ServerStatus-mojo.html">
              <code>was5:ServerStatus</code>
              </a>
            </td>
          <td>The ServerStatus task enables you to get status on a
				server instance or all server instances.</td>
          </tr>
        <tr>
          <td>
            <a href="InstallApplication-mojo.html">
              <code>was5:InstallApplication</code>
              </a>
            </td>
          <td>Installs an ear/war/jar file to WebSphere.</td>
          </tr>
        <tr>
          <td>
            <a href="StopServer-mojo.html">
              <code>was5:StopServer</code>
              </a>
            </td>
          <td>This task enables you to stop a standalone server
				instance. This is not used to stop a server controlled
				by DeploymentManager. Therefore, this task is useful for
				the Base Application Server, and to stop the Node Agent
				and/or DeploymentManager.</td>
          </tr>
        <tr>
          <td>
            <a href="StartServer-mojo.html">
              <code>was5:StartServer</code>
              </a>
            </td>
          <td>This task enables you to start a standalone server
				instance. This is not used to start a server controlled
				by DeploymentManager. Therefore, this task is useful for
				the Base Application Server, and to start the Node Agent
				and/or DeploymentManager. If you wish to start a server
				managed by the Deployment Manager, use the wsadmin task
				to execute a scripting command</td>
          </tr>
        <tr>
          <td>
            <a href="Java2WSDL-mojo.html">
              <code>was5:Java2WSDL</code>
              </a>
            </td>
          <td>The Java2WSDL command maps a Java class to a Web
				Services Description Language (WSDL) file by following
				the Java API for XML-based remote procedure call
				(JAX-RPC) specification. The Java2WSDL command accepts a
				Java class as input and produces a WSDL file
				representing the input class. If there is an existing
				file at the output location, it is overwritten. The WSDL
				file generated by the Java2WSDL command contains WSDL
				and XML schema constructs that are automatically derived
				from the input class. You can override these default
				values with command-line arguments.</td>
          </tr>
        </table>
      </section>
    </body>
  </document>