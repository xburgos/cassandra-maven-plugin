# just the command help
DeliciousService.commandHelp=\
usage: {0} [location] [replace] [user] [password]\n\
\tupdates the delicious bookmarks at the account with\n\
\tthe given [user] and [password] with the links from\n\
\tthe given location, which can be either a local file\n\
\tor a URL\n
# text for successfully executed command
DeliciousService.commandSuccess=OK
# the name of the command to add bookmark links
DeliciousService.addLinks=add-links
# the length of time between invocations of the delicious api
DeliciousService.courtesyTime=1000

# the url of the delicious service
LiveApi.deliciousUrl=http://del.icio.us/api
# the name of the delicious host
LiveApi.deliciousHost=del.icio.us
# text that indicates delicious is unavailable
LiveApi.serviceUnavailable=At the request of de.licio.us you should try again later

# indicates that nothing much is known about the error
Main.exception=the command was unable to complete


# older code
org.codehaus.mojo.delicious.DeliciousService.name=delicious
org.codehaus.mojo.delicious.DeliciousService.description=delicious service

setUser.name=update
setUser.description=\
suppy your delicious username and password
setUser.user.name=username
setUser.user.description=the delicious account username
setUser.password.name=password
setUser.password.description=the delicious account password

fetchDates.name=fetch dates
fetchDates.description=\
fetches a list of dates with the number of posts at each date
fetchDates.tags.name=tags
fetchDates.tags.description=the bookmark tags

fetchPosts.name=fetch bookmarks
fetchPosts.description=\
fetches a list of posts with the given search criteria
fetchPosts.tags.name=tags
fetchPosts.tags.description=the bookmark tags
fetchPosts.date.name=date
fetchPosts.date.description=the bookmark date
fetchPosts.url.name=url
fetchPosts.url.description=the bookmark url

fetchRecentPosts.name=fetch recent bookmarks
fetchRecentPosts.description=\
fetches a list of most recent posts, possibly filtered by tag, maxes out at 100
fetchRecentPosts.tags.name=tags
fetchRecentPosts.tags.description=the bookmark tags
fetchRecentPosts.count.name=count
fetchRecentPosts.count.description=the number of tags to fetch, max is 100, default is 15

fetchAllPosts.name=fetch all bookmarks
fetchAllPosts.description=\
fetches all posts. use sparingly. call update function first to see if you need to fetch this at all
fetchAllPosts.tags.name=tags
fetchAllPosts.tags.description=the bookmark tags

fetchUpdateTime.name=fetch update time
fetchUpdateTime.description=\
Gets the last time the bookmarks were updated

addPost.name=add bookmark
addPost.description=\
this lets you add a single delicious bookmark
addPost.url.name=url
addPost.url.description=the bookmark url
addPost.description.name=description
addPost.description.description=the bookmark name
addPost.tags.name=tags
addPost.tags.description=the bookmark tags
addPost.extended.name=extended
addPost.extended.description=extended information
addPost.replace.name=replace
addPost.replace.description=true to replace existing bookmarks, false otherwise

addBookmarks.name=add bookmarks
addBookmarks.description=\
this lets you add bookmarks from an netscape html bookmark page\n\
Tip: export your safari bookmarks to a file and use this option\n\
to post them into delicious
addBookmarks.linksPage.name=location
addBookmarks.linksPage.description=the links page as a filename or url
addBookmarks.replace.name=replace
addBookmarks.replace.description=true to replace existing bookmarks, false otherwise

deletePost.name=delete bookmark
deletePost.description=\
deletes the bookmark with the given url
deletePost.url.name=url
deletePost.url.description=the bookmark url

fetchTags.name=fetch tags
fetchTags.description=\
fetches the tags used by this account

renameTag.name=rename tag
renameTag.description=\
renames the given tag
renameTag.oldName.name=old tag name
renameTag.oldName.description=the old tag name
renameTag.newName.name=new tag name
renameTag.newName.description=the new tag name
