<?xml version="1.0"?>
<project>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.myco.m2</groupId>
    <artifactId>myco-parent</artifactId>
    <version>2.1-SNAPSHOT</version>
    <relativePath>../myco-parent</relativePath>
  </parent>

  <groupId>com.myco.m2</groupId>
  <artifactId>cpkg</artifactId>
  <version>2.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <primaryPrefix>/opt/myco/p6</primaryPrefix>
    <prefixRoot>${primaryPrefix}</prefixRoot>
    <providedPrefix>${primaryPrefix}/pvd</providedPrefix>
    <prefix>${prefixRoot}</prefix>
    <installDestDir>${project.build.directory}/install</installDestDir>
  </properties>

  <build>
    <extensions>
      <extension>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cbuild-profile-activators</artifactId>
        <version>1.0-alpha-5-SNAPSHOT</version>
      </extension>
    </extensions>
    
    <!-- rhoover - we can declare all the plugin versions here so that this is the only place
                    they get specified.  When they need to be rev'ed up, it will be easy to do.
    -->
    <pluginManagement>
      <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-on-demand-maven-plugin</artifactId>
        <version>${cbuildsPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>make-maven-plugin</artifactId>
        <version>${cbuildsPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-cbuild-maven-plugin</artifactId>
        <version>${cbuildsPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>patch-maven-plugin</artifactId>
        <version>${cbuildsPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>remote-source-maven-plugin</artifactId>
        <version>${cbuildsPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>shell-maven-plugin</artifactId>
        <version>${cbuildsPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>multibuild-optimizer-maven-plugin</artifactId>
        <version>${cbuildsPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>platform-detector-maven-plugin</artifactId>
        <version>${cbuildsPluginVersion}</version>
      </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>make-maven-plugin</artifactId>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-cbuild-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <prefix>${prefix}</prefix>
          <destDir>${installDestDir}</destDir>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId> 
        <artifactId>platform-detector-maven-plugin</artifactId> 
        <configuration>
          <propertiesOnly>true</propertiesOnly> 
        </configuration>
        <executions>
          <execution>
            <id>P6-style</id> 
            <configuration>
              <osProperty>p6.os</osProperty> 
            </configuration>
            <phase>initialize</phase> 
            <goals>
              <goal>detect</goal> 
            </goals>
          </execution>
          <execution>
            <id>custom-style</id> 
            <configuration>
              <osProperty>et.pkg.os</osProperty> 
              <archProperty>et.pkg.arch</archProperty> 
              <platformPatterns>
                <osPatterns>
                <osPattern>
                  <source>ref:redhat-enterprise</source> 
                  <expression>ref:redhat-enterprise</expression> 
                  <token>rhas$1</token> 
                </osPattern>
                <osPattern>
                  <source>ref:fedora</source> 
                  <expression>ref:fedora</expression> 
                  <token>fc$1</token> 
                </osPattern>
                </osPatterns>
              </platformPatterns>
            </configuration>
            <phase>initialize</phase> 
            <goals>
              <goal>detect</goal> 
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>




  <profiles>
    <profile>
      <id>et-arch-profile-x86</id>
      <properties>
      <et.pkg.arch>x86</et.pkg.arch>
      </properties>
      <activation>
        <property>
        <name>os.arch</name>
        <value>i386</value>
        </property>
      </activation>
    </profile>
    
    <profile>
      <id>harvest-binary-archive</id>
      
      <activation>
        <custom>
          <type>modelProperty</type>
          <configuration>
            <name>uses-harvestBinaryArchive</name>
            <value>true</value>
          </configuration>
        </custom>
      </activation>
      
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>patch-maven-plugin</artifactId>
            <configuration>
              <patchingEnabled>false</patchingEnabled>
            </configuration>
          </plugin>
    
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>shell-maven-plugin</artifactId>
    
            <configuration>
              <trimScript>true</trimScript>
              <chmod>true</chmod>
              <skipPomProjects>true</skipPomProjects>
              <messageLevel>debug</messageLevel>
            </configuration>
    
            <executions>
              <execution>
                <id>install-it</id>
                <phase>test</phase>
                <configuration>
                  <!-- Uncomment this to keep the file the plugin uses for this script 
                  <debug>true</debug> -->
    
                  <script>
#!/bin/sh
mkdir -p ${installDestDir}/${prefix}
cp -rv * ${installDestDir}/${prefix}
              </script>
                </configuration>
                <goals>
                  <goal>shell</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>make-maven-plugin</artifactId>
            <configuration>
              <skipConfig>true</skipConfig>
              <skipCompile>true</skipCompile>
              <skipTest>true</skipTest>
              <skipInstall>true</skipInstall>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>build-from-source-archive</id>
      
      <activation>
        <custom>
          <type>modelProperty</type>
          <configuration>
            <name>uses-buildFromSourceArchive</name>
            <value>true</value>
          </configuration>
        </custom>
      </activation>
      
      <properties>
          <EMPkgNameDir>${artifactId}</EMPkgNameDir>
          <EMPkgVersionDir>${version}</EMPkgVersionDir>
          <EMNoArchPrefix>/myco/pkgs/linux/intel/${EMPkgNameDir}/${EMPkgVersionDir}</EMNoArchPrefix>
          <prefix>${EMNoArchPrefix}.${et.pkg.os}.${et.pkg.arch}</prefix>
      </properties>
      
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>multibuild-optimizer-maven-plugin</artifactId>
            <configuration>
              <checkArtifact>true</checkArtifact>
              <archiveUrl>${srcURL}</archiveUrl>
              <checkDirectory>${workDir}</checkDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>make-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <prefix>${prefix}</prefix>
              <destDir>${installDestDir}</destDir>
            </configuration>
            <executions>
              <execution>
                <id>configure</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>configure</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>project-sources-maven-plugin</artifactId>
            <configuration>
              <sourceLocation>${project.artifactId}-${project.version}-src.tar.gz</sourceLocation>
              <sourceArtifactType>tar.gz</sourceArtifactType>
              <sourceUnpackSubpath>${project.artifactId}-${project.version}</sourceUnpackSubpath>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>build-from-project-directory</id>
      
      <activation>
        <custom>
          <type>modelProperty</type>
          <configuration>
            <name>uses-buildFromProjectDirectory</name>
            <value>true</value>
          </configuration>
        </custom>
      </activation>
      
      <properties>
          <EMPkgNameDir>${artifactId}</EMPkgNameDir>
          <EMPkgVersionDir>${version}</EMPkgVersionDir>
          <EMNoArchPrefix>/myco/pkgs/linux/intel/${EMPkgNameDir}/${EMPkgVersionDir}</EMNoArchPrefix>
          <prefix>${EMNoArchPrefix}.${et.pkg.os}.${et.pkg.arch}</prefix>
      </properties>
    
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>multibuild-optimizer-maven-plugin</artifactId>
            <configuration>
              <checkArtifact>false</checkArtifact>
              <checkDirectory>${basedir}</checkDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>make-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <prefix>${prefix}</prefix>
              <destDir>${installDestDir}</destDir>
            </configuration>
            <executions>
              <execution>
                <id>configure</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>configure</goal>
                </goals>
              </execution>
              <execution>
                <id>clean</id>
                <phase>clean</phase>
                <goals>
                  <goal>make-clean</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>project-sources-maven-plugin</artifactId>
            <configuration>
              <projectDirIsSourceLocation>true</projectDirIsSourceLocation>
              <sourceLocation>${basedir}</sourceLocation>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
