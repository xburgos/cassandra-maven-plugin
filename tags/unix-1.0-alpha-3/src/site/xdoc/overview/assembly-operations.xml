<?xml version="1.0"?>

<!--
  ~ The MIT License
  ~
  ~ Copyright 2009 The Codehaus.
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of
  ~ this software and associated documentation files (the "Software"), to deal in
  ~ the Software without restriction, including without limitation the rights to
  ~ use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
  ~ of the Software, and to permit persons to whom the Software is furnished to do
  ~ so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->
<document>
  <properties>
    <title>Assembly Operations</title>
    <author email="trygvis@codehaus.org">Trygve Laugstol</author>
  </properties>
  <body>
    <section name="Assembly Operations">
      All <b>to</b> elements refer to a path <it>within</it> the package.
    </section>

    <section name="Common Settings and Behaviour">
      <subsection name="Artifact Naming and Identification">
        Explain how the artifacts are looked up, groupId:artifactId[:classifier][:type] etc.

        Show examples of ZIP, WAR and TAR.GZ files.
      </subsection>
      <subsection name="File Name Rewriting">
      </subsection>
      <subsection name="Includes and Excludes">
        <p>
          Explain the difference between:
        </p>
        <ul>
          <li>*.foo</li>
          <li>**/*.foo
          </li>
        </ul>
        <p>
          The order of includes vs excludes
        </p>
        <p>
          TODO: Explain the effect of having a basedir-like parameter set when calculating matches. (the include/exclude expressions can't contain the basedir part). Applies only to set attributes for now.
        </p>
      </subsection>
      <subsection name="File Attributes">
        <p>
          <ul>
            <li><b>user</b> - specifies the user that owns the file</li>
            <li><b>group</b> - specifies the group that owns the file</li>
            <li>
              <b>mode</b> - the read/write/executable modes on the file, specified in octal format. Examples
              <ul>
                <li><code>0644</code> => <code>-rw-r--r--</code></li>
                <li><code>0744</code> => <code>-rwxr--r--</code></li>
              </ul>
            </li>
          </ul>
        </p>
      </subsection>
    </section>

    <section name="Assembly Operations">
      <subsection name="Copy File">
        <p>
          Copies a single file.
        </p>
        <p>
          Supported parameters:
        </p>
        <ul>
          <li><b>file</b> - the file to copy.</li>
          <li>
            <b>toFile</b>/ <b>toDir</b> - the destination file or directory. Only one of these two can be specified.
           If toDir is used, the file will get the same name as the source file.
          </li>
          <li>
            <b>attributes</b> - the attributes to set on the copied file.
            See <a href="#File_Attributes">File Attributes</a>
          </li>
        </ul>
        <p>
          Example:
        </p>
        <p>
          <source><![CDATA[
<copy-file>
  <file>src/main/native/myapp.so</file>
  <toFile>/opt/myapp/myapp.so</toFile>
  <attributes>
    <user>myapp</user>
    <group>myapp</group>
    <mode>0644</mode>
  </attributes>
</copy-file>
]]></source>
        </p>
      </subsection>
      <subsection name="Copy Artifact">
        <p>
          Copies an artifact from the local repository. It has to be specified as a dependency.
        </p>
        <p>
          Supported parameters:
        </p>
        <ul>
          <li>
            <b>artifact</b> - the artifact id of the file to copy.
            See <a href="#Artifact_Naming_and_Identification">Artifact Naming and Identification</a>
          </li>
          <li>
            <b>toFile</b>/ <b>toDir</b> - the destination file or directory. Only one of these two can be specified.
           If toDir is used, the file will get the same name as the source file.
          </li>
          <li>
            <b>attributes</b> - the attributes to set on the copied file.
            See <a href="#File_Attributes">File Attributes</a>
          </li>
        </ul>
        <p>
          Example:
        </p>
        <p>
          <source><![CDATA[
<copy-artifact>
  <artifact>org.jvnet.hudson.main:hudson-war:war</artifact>
  <toFile>/opt/hudson/hudson.war</toFile>
  <attributes>
    <user>hudson</user>
    <group>hudson</group>
    <mode>0644</mode>
  </attributes>
</copy-artifact>
]]></source>
        </p>
      </subsection>
      <subsection name="Mkdirs">
        <p>
          Creates one or more directories with the specified attributes.
        </p>
        <p>
          Supported parameters:
        </p>
        <ul>
          <li>
            <b>artifact</b> - the artifact id of the file to copy.
            See <a href="#Artifact_Naming_and_Identification">Artifact Naming and Identification</a>
          </li>
          <li>
            <b>path</b>/ <b>paths</b> - the directory or directories to create. Only one of these two can be specified.
            If toDir is used, the file will get the same name as the source file.
          </li>
          <li>
            <b>attributes</b> - the attributes to set on the direectories.
            See <a href="#File_Attributes">File Attributes</a>
          </li>
        </ul>
        <p>
          Example:
        </p>
        <p>
          <source><![CDATA[
<mkdirs>
  <paths>
    <path>/var/opt/jetty</path>
    <path>/var/opt/jetty/cache</path>
    <path>/var/opt/jetty/log</path>
  </paths>
  <attributes>
    <user>jetty</user>
    <group>jetty</group>
  </attributes>
</mkdirs>
]]></source>
        </p>
      </subsection>
      <subsection name="Set Attributes">
        <p>
          Changes the attributes on files and directories found. It will only look at files copied so far.
        </p>
        <p>
          Supported parameters:
        </p>
        <ul>
          <li>
            <b>basedir</b> - the base directory when applying. If not specified it defaults to the root of the package.
          </li>
          <li>
            <b>fileAttributes</b> - the attributes to set on the matched files. 
            See <a href="#File_Attributes">File Attributes</a>
          </li>
          <li>
            <b>includes</b> and <b>excludes</b> - controls files to include in the archive. The paths are relative to
            the basedir. See <a href="#Includes_and_Excludes">Includes and Excludes</a>
          </li>
          <li>
            <b>directoryAttributes</b> - the attributes to set on the matched direectories.
            See <a href="#File_Attributes">File Attributes</a>
          </li>
        </ul>
        <p>
          Example:
        </p>
        <p>
          <source><![CDATA[
<set-attributes>
  <basedir>/usr/share/hello/bin</basedir>
  <fileAttributes>
    <user>bah</user>
    <group>bah</group>
    <mode>0755</mode>
  </fileAttributes>
</set-attributes>
]]></source>
        </p>
      </subsection>
      <subsection name="Symlink">
        <p>
          Creates a symbolic link.
        </p>
        <p>
          Supported parameters:
        </p>
        <ul>
          <li>
            <b>path</b> - the file to create in the package.
          </li>
          <li>
            <b>value</b> - where the symbolic link points to.
          </li>
        </ul>
        <!-- TODO: Create an example -->
      </subsection>
      <subsection name="Copy Directory, Extract Artifact and Extract File">
        <p>
          These operation work in a similar fasion and share these attributes:
        </p>
        <ul>
          <li><b>to</b> - the base destination directory.</li>
          <li>
            <b>includes</b> and <b>excludes</b> - controls files to include in and exlucde from the package.
            See <a href="#Includes_and_Excludes">Includes and Excludes</a>
          </li>
          <li>
            <b>pattern</b> and <b>replacement</b> - controls rewriting of file names.
            See <a href="#File_Name_Rewriting">File Name Rewriting</a>
          </li>
          <li>
            <b>fileAttributes</b> - the attributes to set of any files copied.
            See <a href="#File_Attributes">File Attributes</a>
          </li>
          <li><b>directoryAttributes</b> - the attributes to set of any directories copied.
            See the <a href="#File_Attributes">File Attributes</a>
          </li>
        </ul>

        <h4>Copy Directory</h4>
        <p>
          Copies a complete directory structure.
        </p>
        <p>
          Additional parameters:
        </p>
        <ul>
          <li><b>from</b> - The directory to copy from.</li>
        </ul>
        <p>
          Example:
        </p>
        <p>
          <source><![CDATA[
<copy-directory>
  <from>target/appassembler</from>
  <to>/usr/share/hello</to>
</copy-directory>
]]></source>
        </p>

        <h4>Extract Artifact</h4>
        <p>
          Exctracts an artifact from the local repository. It has to be specified as a dependency.
          TODO: document the supported archive types. (at least zip, jar and war are supported)
        </p>
        <p>
          Additional parameters:
        </p>
        <ul>
          <li>
            <b>artifact</b> - The artifact id of the artifact to extract.
            See <a href="#Artifact_Naming_and_Identification">Artifact Naming and Identification</a>.
          </li>
        </ul>
        <p>
          Example:
        </p>
        <p>
          <source><![CDATA[
<extract-artifact>
  <artifact>org.mortbay.jetty:jetty-assembly:zip</artifact>
  <to>/opt/jetty</to>
</extract-artifact>
]]></source>
        </p>

        <h4>Extract File</h4>
        <p>
          Exctracts a file. TODO: document the supported archive types. (at least zip, jar and war are supported)
        </p>
        <p>
          Additional parameters:
        </p>
        <ul>
          <li><b>archive</b> - The path to an archive to extract.</li>
        </ul>
        <p>
          Example:
        </p>
        <p>
          <source><![CDATA[
<extract-file>
  <archive>src/main/extras.zip</archive>
  <to>/opt/share/myapp/extras</to>
</extract-file>
]]></source>
        </p>
      </subsection>
    </section>
  </body>
</document>
